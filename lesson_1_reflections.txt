HOW DID VIEWING A DIFF BETWEEN TWO VERSIONS OF A FILE HELP YOU SEE THE BUG THAT WAS INTRODUCED?

-The number of lines I needed to manually check is greatly reduced.
-I was unable to find some of the differences without using fc(diff).

HOW COULD HAVING EASY ACCESS TO THE ENTIRE HISTORY OF A FILE MAKE YOU A MORE EFFICIENT PROGRAMMER IN THE LONG TERM?

-I could revert to a previous version instead of trying to track down hard to find bugs.
-I will have a record of past work making easier to find and reuse code.

WHAT DO YOU THINK ARE THE PROS AND CONS OF MANUALLY CHOOSING WHEN TO CREATE A COMMIT, LIKE YOU DO IN GIT, VS HAVING VERSIONS AUTOMATICALLY SAVED, LIKE GOOGLE DOCS DOES?

-automatic saving could be very helpful when a user often forgets to save frequent commits.
-manually saving makes commits more likely to be saved and documented after logical, discreet code changes.

WHY DO YOU THINK SOME VERSION CONTROL SYSTEMS, LIKE GIT, ALLOW SAVING MULTIPLE FILES IN ONE COMMIT, WHILE OTHERS, LIKE GOOGLE DOCS, TREAT EACH FILE SEPARATELY?

-The vast majority of users don't require that funcionality in those programs.
-Being able to save multiple files allows a user to lock those files to prevent multiple users from altering the same files concurrently.

HOW CAN YOU USE THE COMMANDS GIT LOG AND GIT DIFF TO VIEW THE HISTORY OF FILES?

-I can use git log to see the entire change history of the repository, and then use git diff to see differences between any two commits.

HOW MIGHT USING VERSION CONTROL MAKE YOU MORE CONFIDENT TO MAKE CHANGES THAT COULD BREAK SOMETHING?

-Having a permanent "undo-redo" log which is fully documented and easily comparable  and searchable sounds great to me!
-Removes the fear of making big changes.

NOW THAT YOU HAVE YOUR WORKSPACE SET UP, WHAT DO YOU WANT TO TRY USING GIT FOR?

-I'm excited to use git with my future programming projects.
